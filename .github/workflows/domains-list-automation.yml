name: Domains Automation

on:
  schedule:
    - cron: '0 10 * * *'
  push:
    paths:
      - 'data/**'
      - 'scripts/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  setup-go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      
      - name: Install Go dependencies
        run: go mod download
      
      - name: Save Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

  setup-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Save Python env
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  process-domains:
    needs: [setup-go, setup-python]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Restore Python env
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Verify Python deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run parsing-domains
        run: go run scripts/parsing-domains.go

      - name: Run process-domains
        run: go run scripts/process-domains.go

      - name: Commit and push domains changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/domains/*
          git commit -m "Update domains lists" || echo "No changes"
          git push origin HEAD:main
          git pull origin HEAD:main

      - name: Run parsing-subnets
        run: go run scripts/parsing-subnets.go

      - name: Commit and push CIDR changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/CIDRs/*
          git commit -m "Update CIDR lists" || echo "No changes"
          git push origin HEAD:main
          git pull origin HEAD:main

      - name: Generate all configs
        run: |
          python scripts/generate-srs.py
          python scripts/generate-routing-config.py
          python scripts/generate-sing-box-rules.py

      - name: Commit and push all generated configs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/rulesets/*
          git commit -m "Update all generated configs (SRS, routing, sing-box)" || echo "No changes"
          git push origin HEAD:main
          git pull origin HEAD:main
